services:
  traefik:
    image: "traefik:v3.3"
    container_name: "api-gateway"
    command:
      - "--api.insecure=true" # Включаем веб-интерфейс Traefik (по умолчанию отключён)
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--accesslog=true"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8080:8080" # Админка Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
      - "29092:29092"  # Внутренний порт для контейнеров
      - "9093:9093"  # Для внешних соединений
    environment:
      CLUSTER_ID: "vV6kIjDfT-SiyJvepUzzbA"
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: "PLAINTEXT://:9092,INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092,INTERNAL://kafka:29092,EXTERNAL://localhost:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_CONTROLLER_LISTENER_NAMES: "EXTERNAL"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true  # Включаем поддержку OTLP
      - KAFKA_BROKERS=kafka:9092
      - SPAN_STORAGE_TYPE=memory  # Можно поменять на badger/cassandra/elasticsearch
    ports:
      - "16686:16686"  # UI Jaeger
      - "4319:4317"  # gRPC OTLP
      - "4320:4318"  # HTTP OTLP

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    restart: always
    volumes:
      - ./deployment/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" #gRPC
      - "4318:4318" #HTTP
    links:
      - kafka

  temporal:
    image: temporalio/auto-setup:latest
    container_name: temporal
    environment:
      - TEMPORAL_BROADCAST_ADDRESS=0.0.0.0
      - DB=postgres12_pgx
      - DB_PORT=5432
      - TEMPORAL_DB=temporal
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
      - POSTGRES_SEEDS=temporal-db
#      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
    ports:
      - "7233:7233" # Порт Temporal
    depends_on:
      temporal-db:
        condition: service_healthy

  temporal-admin-tools:
    image: temporalio/admin-tools:latest
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    entrypoint: [ "/bin/sh", "-c", "sleep 10; tctl namespace register default || true; sleep infinity" ]
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233

  temporal-web:
    image: temporalio/web:latest
    container_name: temporal-web
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    ports:
      - "8088:8088" # Веб-интерфейс Temporal
    depends_on:
      - temporal

  temporal-db:
    image: postgres:12
    container_name: temporal-db
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
      POSTGRES_HOST_AUTH_METHOD: trust  # Разрешает все подключения

    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U temporal" ]
      interval: 5s
      retries: 5      


volumes:
  kafka_data: