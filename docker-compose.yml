services:
  traefik:
    image: "traefik:v3.3"
    container_name: "api-gateway"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--accesslog=true"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9093:9093"
    environment:
      CLUSTER_ID: "vV6kIjDfT-SiyJvepUzzbA"
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: "PLAINTEXT://:9092,INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092,INTERNAL://kafka:29092,EXTERNAL://localhost:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_CONTROLLER_LISTENER_NAMES: "EXTERNAL"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - KAFKA_BROKERS=kafka:9092
      - SPAN_STORAGE_TYPE=memory
    ports:
      - "16686:16686"
      - "4319:4317"
      - "4320:4318"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    restart: always
    volumes:
      - ./deployment/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"
      - "4318:4318"
    links:
      - kafka

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    restart: always
    ports:
      - "8123:8123"   # HTTP-интерфейс ClickHouse
      - "9000:9000"   # Native клиент ClickHouse
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./schemas:/var/lib/clickhouse/format_schemas
      # - ./deployment/default-user.xml:/etc/clickhouse-server/users.d/default-user.xml
    environment:
      CLICKHOUSE_USER: otel
      CLICKHOUSE_PASSWORD: "otel_passwd"
      CLICKHOUSE_DB: otel
      CLICKHOUSE_LOG_LEVEL: debug

  clickhouse-client:
    image: clickhouse/clickhouse-client:latest
    container_name: clickhouse-client
    restart: always
    depends_on:
      - clickhouse
    entrypoint: ["tail", "-f", "/dev/null"]

  retailer-api:
    build:
      context: ./
      dockerfile: retailer-api/deployment/Dockerfile
    container_name: retailer-api
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    environment:
      OTEL_EXPORTER_URL: "otel-collector:4318"
      APP_ENV: "production"
      APP_DOMAIN: "web"
      APP_SERVICE_NAME: "retailer-api"
      APP_SERVICE_VERSION=: "1.0.0"
      APP_INSTANCE_ID: "debug"
      KAFKA_BROKER: "kafka:29092"
      KAFKA_ORDERS_TOPIC: "orders"
  retailer-oms:
    build:
      context: ./
      dockerfile: retailer-oms/deployment/Dockerfile
    container_name: retailer-oms
    restart: always
    depends_on:
      - retailer-api
      - kafka
    environment:
      OTEL_EXPORTER_URL: "otel-collector:4318"
      APP_ENV: "production"
      APP_DOMAIN: "oms"
      APP_SERVICE_NAME: "retailer-oms"
      APP_SERVICE_VERSION: "1.0.0"
      APP_INSTANCE_ID: "debug"
      KAFKA_BROKER: "kafka:29092"
      KAFKA_ORDERS_TOPIC: "orders"


volumes:
  kafka_data:
  clickhouse_data:
